image: node:10.13-alpine

stages:
  - install
  - build_test
  - publish

install:
  stage: install
  retry: 2
  variables:
    YARN_CACHE_FOLDER: yarn
  artifacts:
    paths:
      - node_modules/
  cache:
    paths:
      - yarn/
  script:
    - yarn install --pure-lockfile --production=false

test:
  stage: build_test
  dependencies:
    - install
  script: yarn test:coverage
  after_script:
    - './node_modules/.bin/nyc report --reporter=text-lcov > coverage.lcov'
    - './node_modules/.bin/codecov'

# audit:
#   stage: build_test
#   allow_failure: true
#   dependencies:
#     - install
#   script: yarn audit

lint:
  stage: build_test
  dependencies:
    - install
  script: yarn lint

typecheck:
  stage: build_test
  dependencies:
    - install
  script: yarn typecheck

build:
  stage: build_test
  dependencies:
    - install
  script: yarn build
  artifacts:
    paths:
      - dist/

build api:
  stage: build_test
  only:
    - master
  dependencies:
    - install
  script: yarn build:api
  artifacts:
    paths:
      - api/

npm publish:
  stage: publish
  only:
    - tags
  dependencies:
    - install
    - build
  script:
    - npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
    - npm publish

api publish:
  image: alpine/git
  stage: publish
  only:
    - master
  dependencies:
    - build api
  script:
    - mv api ../api
    - git checkout -b gh_pages
    - mv ../* ./
    - git add -f *
    - git commit -m "Generate API docs"
    - git push origin gh_pages
